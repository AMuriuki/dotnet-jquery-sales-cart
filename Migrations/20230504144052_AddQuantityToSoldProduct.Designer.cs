// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sales_invoicing_dotnet.Data;

#nullable disable

namespace sales_invoicing_dotnet.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20230504144052_AddQuantityToSoldProduct")]
    partial class AddQuantityToSoldProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("fname")
                        .HasColumnType("TEXT");

                    b.Property<string>("lname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            fname = "Wanjiku",
                            lname = "Mwangi"
                        },
                        new
                        {
                            Id = 2,
                            fname = "Kipchoge",
                            lname = "Keino"
                        },
                        new
                        {
                            Id = 3,
                            fname = "Auma",
                            lname = "Obama"
                        },
                        new
                        {
                            Id = 4,
                            fname = "Mumbi",
                            lname = "Ngugi"
                        },
                        new
                        {
                            Id = 5,
                            fname = "Omondi",
                            lname = "Odinga"
                        });
                });

            modelBuilder.Entity("Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("imageUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple AirPods Pro",
                            Price = 8500.00m,
                            imageUrl = "https://ke.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/31/2411421/1.jpg?5248"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Xiaomi Redmi Buds",
                            Price = 2700.00m,
                            imageUrl = "https://ke.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/05/7399421/1.jpg?3641"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Oraimo Wireless Earphone",
                            Price = 3400.00m,
                            imageUrl = "https://ke.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/94/1328411/1.jpg?9977"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Netac USB Type-C 128 GB",
                            Price = 1600.00m,
                            imageUrl = "https://ke.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/71/283233/1.jpg?8328"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sandisk USB 32GB ",
                            Price = 8500.00m,
                            imageUrl = "https://ke.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/01/191691/1.jpg?4986"
                        });
                });

            modelBuilder.Entity("SoldProduct", b =>
                {
                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("SoldProducts");
                });

            modelBuilder.Entity("SoldProduct", b =>
                {
                    b.HasOne("Invoice", "Invoice")
                        .WithMany("SoldProducts")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", "Product")
                        .WithMany("SoldProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Invoice", b =>
                {
                    b.Navigation("SoldProducts");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("SoldProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
